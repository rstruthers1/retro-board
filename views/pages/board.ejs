<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/header.ejs %>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.15.1/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.15.1/additional-methods.min.js"></script>
    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>

    <link rel="stylesheet" type="text/css" href="/css/cmxformTemplate.css"/>
    <link rel="stylesheet" type="text/css" href="/css/cmxformmine.css"/>
    <title>Easy Retro Board: Your Board</title>
    <style>
        .sticky {
              background-color: yellow;

              color: #333;
              width: 100px;
              height: 100px;
              margin: 0 auto;
              padding: 0px;
              font-family: Arial;
              font-size: 10px;
              font-weight: bold;
             /*overflow:auto;*/
              box-shadow: 0 2px 2px 1px rgba(0,0,0,0.3);
          }


        .sticky-message-area {
            background-color: yellow;

            color: #333;

            margin: 0 auto;
            font-family: Arial;
            font-size: 12px;
            font-weight: bold;

            border-style: none;
            border-color: Transparent;
            overflow: auto;

            resize: none;
            outline: none;
            width: 100%;
            padding-right: 0px;
            padding-top: 2px;
            padding-left: 2px;
            padding-bottom: 5px;
            border: none;
            height: 80%;
            margin: 0px;

        }

        .ui-dialog {

            background-color: yellow;

            color: #333;

            margin: 0 auto;
            padding: 10px;
            font-family: Arial;

            box-shadow: 0 2px 2px 1px rgba(0,0,0,0.3);

        }

        .ui-dialog .ui-widget-content {

            background-color: yellow;

            color: #333;

            margin: 0 auto;
            padding: 0px;


        }

        .sticky-text-dialog {

            background-color: yellow;

            color: #333;

            margin: 0 auto;
            font-family: Arial;
            font-size: 12px;
            font-weight: bold;

            border-style: none;
            border-color: Transparent;
            overflow: auto;

            resize: none;
            outline: none;
            width: 100%;
            padding: 0px;
            border: none;
            height: 90%;
            margin: 0px;
        }

        .ui-dialog-titlebar {
            display: none;
        }

        .sticky-active {

        }

        .sticky-canvas-quadrant {
            max-width: 50%;
            max-height: 50%;
            min-width: 50%;
            min-height: 50%;
            width: 50%;
            height: 50%;
            border: 1px solid grey;
            float: left;
        }

        .sticky-canvas-quadrant-title {
            font-family: Arial;
            font-size: 20px;
            font-weight: bold;
        }

        .center-me-button {
            margin:0 auto;
            display:block;
        }

        .center-me {
            margin:0 auto;
            width: 50px;
        }

        .navbar-brand {
            transform: translateX(-50%);
            left: 50%;
            position: absolute;
        }

        #board-members-inner-panel ul {
            overflow: hidden;
            overflow-y: scroll;
        }
    </style>
    <script>

        (function($){

            $.event.special.doubletap = {
                bindType: 'touchend',
                delegateType: 'touchend',

                handle: function(event) {
                    var handleObj   = event.handleObj,
                            targetData  = jQuery.data(event.target),
                            now         = new Date().getTime(),
                            delta       = targetData.lastTouch ? now - targetData.lastTouch : 0,
                            delay       = delay == null ? 300 : delay;

                    if (delta < delay && delta > 30) {
                        targetData.lastTouch = null;
                        event.type = handleObj.origType;
                        ['clientX', 'clientY', 'pageX', 'pageY'].forEach(function(property) {
                            event[property] = event.originalEvent.changedTouches[0][property];
                        })

                        // let jQuery handle the triggering of "doubletap" event handlers
                        handleObj.handler.apply(this, arguments);
                    } else {
                        targetData.lastTouch = now;
                    }
                }
            };

        })(jQuery);

        function generateUUID() {
            var d = new Date().getTime();
            var uuid = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                var r = (d + Math.random()*16)%16 | 0;
                d = Math.floor(d/16);
                return (c=='x' ? r : (r&0x3|0x8)).toString(16);
            });
            return uuid;
        };

        var stickies = [];

        function Sticky(message, x, y, id) {
            this.message = message;
            this.x = x;
            this.y = y;
            this.id = id;
        }


        $(document).ready(function(){

            $( "div[id^='sticky-section-']" ).click(function(e) {
                console.log("e.pageX, e.pageY: " + e.pageX + ", " + e.pageY);
               // alert("e.pageX, e.pageY: " + e.pageX + ", " + e.pageY);
            });




            function fetchBoardMembers() {
                $.ajax({
                    url: "/board-users?boardId=<%= board.id %>"
                }).then(function (data) {
                    var boardUsersHtml = "";
                    if (data && data.board_users) {
                        for (var i = 0; i < data.board_users.length; i++) {
                            var user = data.board_users[i];
                            boardUsersHtml +=
                                    '<li class="list-group-item" id=' + user.id + '>' + user.firstname + '&nbsp;' + user.lastname + '<span style="float:right"><img src="/images/disconnected.png"></span></li>';
                        }
                        $("#board-members").html(boardUsersHtml);
                    }
                });
            };

            //fetchBoardMembers();

            function idFoundInUserConnections(id, userConnections) {
                for (var i = 0; i < userConnections.length; i++) {
                    if (id === userConnections[i].userId) {
                        return true;
                    }
                }
                return false;
            }

            function renderMemberList(usersWithConnectionStatus) {
                var boardUsersHtml = "";
                for (var i = 0; i < usersWithConnectionStatus.length; i++) {
                    var user = usersWithConnectionStatus[i];
                    var imageSource = "";
                    if (user.connected) {
                        imageSource = "/images/connected.png";
                    } else {
                        imageSource = "/images/disconnected.png";
                    }
                    boardUsersHtml +=
                            '<li class="list-group-item" id=' + user.id + '>' +
                                user.firstname + '&nbsp;' + user.lastname +
                                '<span style="float:right">' +
                                    '<img src="' + imageSource + '">' +
                                '</span></li>';
                }
                $("#board-members").html(boardUsersHtml);
            }

            // Connect to our node/websockets server
            var socket = io.connect(window.location.hostname);
            $("#message-center").val("");

            socket.on('connect', function() {
                socket.emit('user joined', { user_id: "<%= user.id%>", board_id: "<%= board.id%>"});
            });

            socket.on('user joined', function(data) {
                console.log("user joined");
                renderMemberList(data.usersWithConnectionStatus);
            });

            socket.on('initial notes', function(data){
               console.log("initial notes: " + JSON.stringify(data));
                if (data) {
                    for (var i = 0; i < data.length; i++) {
                        var note = data[i];
                        if ($("#" + note.stickyId).length == 0) {
                            addSticky(note.message, true,  note.stickyId, note.top, note.left, note.userVotes);
                        } else {
                            moveSticky( note.stickyId, note.top, note.left);
                        }
                    }
                }
            });

            /**
            socket.on('sticky added', function(data) {
                console.log("sticky added: " + JSON.stringify(data));
                if (data.user_id != "<%= user.id%>") {
                    addSticky(data.sticky_message, true, data.sticky_id);
                }
            });**/

            socket.on('sticky dropped', function(data) {
                console.log("sticky dropped: " + JSON.stringify(data));
                if ($("#" + data.sticky_id).length == 0) {
                    addSticky(data.message, true,  data.sticky_id, data.top, data.left);
                } else {
                    moveSticky(data.sticky_id, data.top, data.left);
                }

            });


            socket.on('sticky message updated', function(data) {
                console.log("sticky message updated: "+ JSON.stringify(data));
                $("#" + data.sticky_id + "message").text(data.message);
            });

            socket.on('sticky upvote', function(data) {
                console.log("sticky upvote: " + JSON.stringify(data));
                updateVotesForSticky(data.sticky_id, data.votes);
            });

            socket.on('sticky deleted', function(data) {
                console.log("sticky deleted: "+ JSON.stringify(data));
                deleteSticky(data.sticky_id, true);
            });

            socket.on('user left', function(data) {
                console.log("user left");
                renderMemberList(data.usersWithConnectionStatus);
            });



            $("#sticky-canvas").droppable(
                {
                    drop: function(event, ui) {
                        var stickyId = ui.draggable.attr('id');
                        console.log("Sticky dropped :" + stickyId + ", (" + ui.position.left + ", " + ui.position.top + ")");
                        socket.emit('sticky dropped', { sticky_id: stickyId, message: $("#" + stickyId + "-message").text(), left: ui.position.left,
                            top: ui.position.top,
                            user_id: "<%= user.id%>", board_id: "<%= board.id%>"});
                    }
                }
            );

            function moveSticky(stickyId, top, left) {
                $("#" + stickyId).css({"position": stickyId, "top": top , "left": left});
            }

            function deleteSticky(stickyId, fromSocketEvent) {
                if ($("#" + stickyId).length != 0) {
                    $("#" + stickyId).remove();
                    if (!fromSocketEvent) {
                        socket.emit("sticky deleted", {sticky_id: stickyId, user_id: "<%= user.id%>", board_id: "<%= board.id%>"});
                    }
                }
            }

            function addSticky(message, fromSocketEvent, stickyId, top, left, userVotes) {
                var stickyCanvasWidth = $("#sticky-canvas").width();
                var stickyCanvasHeight = $("#sticky-canvas").height();
                var x = stickyCanvasWidth /2 - 50;
                var y = stickyCanvasHeight /2 - 50;
                if (top) {
                    y = top;
                }
                if (left) {
                    x = left;
                }
                var posStyle = "position: absolute; top: " + y + "px; left: " + x + "px;";
                console.log("posStyle: " + posStyle);
                var currentId = "";
                if (!stickyId) {
                    currentId = generateUUID();
                } else {
                    currentId = stickyId;
                }
                var sticky = new Sticky(message, x, y, currentId);
                stickies.push(sticky);

                console.log(stickies);

                var voteThumbColor = "lightgray";
                var numVotes = 0;
                if (userVotes) {
                    numVotes = userVotes.length;
                }
                var userId = parseInt("<%= user.id%>");
                var userVotedForSticky = false;
                for (var i = 0; i < numVotes; i++) {
                    if (userId = userVotes[i]) {
                        userVotedForSticky = true;
                        break;
                    }
                }
                if (userVotedForSticky) {
                    voteThumbColor = "black";
                }


                $("#sticky-canvas").append('<div class="sticky ui-widget-content sticky-active" id="' + currentId + '" style="' + posStyle + '">' +
                        '<div class="sticky-message-area" id="' + currentId + '-message"></div>' +
                        '<div style="padding:2px; ">' +
                        '<span id="' + currentId + '-vote-thumb" class="glyphicon glyphicon-thumbs-up" aria-hidden="true" style="font-size:14px; color:' + voteThumbColor + '; cursor: pointer;"></span> &nbsp;' +
                        '<span id="' + currentId + '-current-up-votes" style="font-size: 14px;">' + numVotes.toString() + '</span>' +

                        '</div>' +
                        '</div>');
                $("#" + currentId + "-message").text(message);
                $("#" + currentId ).draggable(
                        {containment: $("#sticky-canvas")}
                );
                $("#" + currentId).on("dragstart",function( event, ui ) {
                    setStickyLayerToHighestOnCanvas($(this).attr('id'));
                }  );
                $("#" + currentId).dblclick(function(e){
                    console.log("double click happened");
                    showDialog($(this).attr('id'));
                });

                $("#" + currentId).on('doubletap', function(e){
                    console.log("double click happened");
                    showDialog($(this).attr('id'));
                });


                $("#" + currentId).css("z-index", 0);
                setStickyLayerToHighestOnCanvas(currentId);
                $("#" + currentId ).click(function(e) {
                    console.log("sticky clicked: e.pageX, e.pageY: " + e.pageX + ", " + e.pageY);
                   // alert("sticky clicked: e.pageX, e.pageY: " + e.pageX + ", " + e.pageY);
                });


                $("#" + currentId + "-vote-thumb").click(function(e) {

                    if (userVotedForSticky) {
                        handleDownVote($(this).attr('id'));
                    } else {
                        handleUpVote($(this).attr('id'));
                    }

                });


                if (!fromSocketEvent) {
                    socket.emit('sticky added', {
                        sticky_id: currentId,
                        sticky_message: message,
                        user_id: "<%= user.id %>",
                        board_id: "<%= board.id %>",
                        top: y,
                        left: x
                    });
                }
                return currentId;
            }

            function setStickyLayerToHighestOnCanvas(stickyId) {
                var maxLayer = 1;
                $(".sticky").each(function(index, element) {
                    var zLayer = parseInt($(this).css("z-index"));
                    console.log("zLayer: " + zLayer);
                    if (zLayer > maxLayer) {
                        maxLayer = zLayer;
                    }
                });
                console.log("maxLayer: " + maxLayer);
                console.log("z-index for sticky with id " + stickyId + ": " + $("#" + stickyId).css("z-index"));
                if (maxLayer > parseInt($("#" + stickyId).css("z-index"))) {
                    $("#" + stickyId).css("z-index", maxLayer + 1);
                }
            }

            function addOrUpdateSticky(stickyId, message) {
                if (!stickyId) {
                    addSticky(message);
                } else {
                    console.log("stickyId = " + stickyId);
                    $("#" + stickyId + "-message").text(message);
                    socket.emit('sticky message updated', { sticky_id: stickyId, message: message,
                        user_id: "<%= user.id%>", board_id: "<%= board.id%>"});
                }
            }

            function updateVotesForSticky(stickyId, votes) {
                console.log("updateVotesForSticky: stickyId = " + stickyId);
                console.log("votes = " + JSON.stringify(votes));
                var voteThumbId = stickyId + "-votes-thumb";
                $("#" + voteThumbId).off("click");

                var voteThumbColor = "lightgray";
                var numVotes = 0;
                if (votes) {
                    numVotes = votes.length;
                }
                var userId = parseInt("<%= user.id%>");
                var userVotedForSticky = false;
                for (var i = 0; i < numVotes; i++) {
                    if (userId == votes[i].user_id) {
                        userVotedForSticky = true;
                        break;
                    }
                }
                if (userVotedForSticky) {
                    voteThumbColor = "black";
                }

                $("#" + voteThumbId).css("color", voteThumbColor);
                $("#" + stickyId + "-current-up-votes").text(numVotes.toString());

                $("#" +  voteThumbId).click(function(e) {
                    if (userVotedForSticky) {
                        handleDownVote($(this).attr('id'));
                    } else {
                        handleUpVote($(this).attr('id'));
                    }
                });
            }

            function handleUpVote(voteThumbId) {
                console.log("in handleUpVote, id = " + voteThumbId);

                var n = voteThumbId.lastIndexOf("-vote-thumb");
                console.log("n = " + n);
                var stickyId = voteThumbId.substr(0, n);

                $("#" + voteThumbId).css("color", "black");
                $("#" + voteThumbId).off("click");
               // $("#" + voteThumbId).attr("id", downVoteId);
                var votes = parseInt($("#" + stickyId + "-current-up-votes").text());
                console.log("---- votes: " + votes);
                votes++;
                $("#" + stickyId + "-current-up-votes").text(votes.toString());
                $("#" + voteThumbId).on("click", function(e) {
                    handleDownVote($(this).attr('id'));
                });
                socket.emit('sticky upvote', { sticky_id: stickyId,
                    user_id: "<%= user.id%>", board_id: "<%= board.id%>"});

            }

            function handleDownVote(voteThumbId) {
                console.log("in handleDownVote, id = " + voteThumbId);

                var n = voteThumbId.lastIndexOf("-vote-thumb");
                var stickyId = voteThumbId.substr(0, n);
                var upVoteId = stickyId + "-upvote";
                $("#" + voteThumbId).css("color", "lightgray");
                $("#" + voteThumbId).off("click");
               // $("#" + downVoteId).attr("id", upVoteId);
                var votes = parseInt($("#" + stickyId + "-current-up-votes").text());
                console.log("---- votes: " + votes);
                votes--;
                $("#" + stickyId + "-current-up-votes").text(votes.toString());
                $("#" + voteThumbId).on("click", function(e) {
                    handleUpVote($(this).attr('id'));
                });
                socket.emit('sticky downvote', { sticky_id: stickyId,
                    user_id: "<%= user.id%>", board_id: "<%= board.id%>"});
            }

            $("#new-sticky-button").click(function (e) {
                showDialog("");
            });

            function showDialog(stickyId)
            {
                $("#dialog-modal").data("stickyId", stickyId).dialog({
                    width: 250,
                    height: 300,
                    buttons: [
                        {
                            text: "OK",
                            click: function() {
                                $( this ).dialog( "close" );
                                var localStickyId = $(this).data('stickyId');
                                addOrUpdateSticky(localStickyId, $('#dialog-text-area').val());
                            }
                        },
                        {
                            text: "Cancel",
                            click: function() {
                                $( this ).dialog( "close" );
                            }
                        },
                        {
                            text: "Delete",
                            click: function() {

                                $( this ).dialog( "close" );
                                var localStickyId = $(this).data('stickyId');
                                deleteSticky(localStickyId);
                            }
                        }

                    ],


                    open: function(event, ui)
                    {   var localStickyId = $(this).data('stickyId');
                        var stickyText = "";
                        if (localStickyId) {
                            stickyText = $("#" + localStickyId + "-message").text();
                        }
                        var textarea = $('<textarea class="sticky-text-dialog" id="dialog-text-area"></textarea>' +
                                '<div id="dlg-change-up-votes" style="padding:2px; display: table-row; vertical-align: bottom; height: 1px;"><span id="dlg-current-up-votes">+0</span>&nbsp;' +
                                '<span > <img src="/images/glyphicons-344-thumbs-up.png" height="16" width="16" style="vertical-align: top; cursor: pointer;"></span>' +
                                '</div>');


                        $(this).html(textarea);
                        $("#dialog-text-area").text(stickyText);

                        $("#dialog-text-area").keypress(function (e) {
                            var code = (e.keyCode ? e.keyCode : e.which);
                            if (code == 13) {
                                console.log("User hit enter")
                                $("#dialog-modal").dialog( "close" );
                                var localStickyId = $("#dialog-modal").data('stickyId');
                                addOrUpdateSticky(localStickyId, $('#dialog-text-area').val());
                                return true;
                            }
                        });

                        if (localStickyId) {
//                            $('#dialog-text-area').select();
                            $('#dialog-text-area').focus();
                        } else {
                            $('#dialog-text-area').focus();
                        }
                    }
                });
            }


        });


    </script>

</head>
<body>
<% include ../partials/nav.ejs %>

    <% if (error_message.length > 0) { %>
    <div class="alert alert-danger"><%= error_message %></div>
    <% } else { %>
    <nav class="navbar navbar-default navbar-static-top navbar-inverse" style="padding: 0px; margin: 0px; z-index: 10;">
        <div class="container">

            <ul class="nav navbar-nav navbar-left">
                <% if (board_admin) {%>
                <li class="nav navbar-nav navbar-left">
                    <a href="add-users-to-board?boardId=<%= board.id%>"  role="button" aria-expanded="false" id="add-user">
                        <span class="glyphicon glyphicon-plus"></span>&nbsp;Add Users</a>
                </li>
                <% } %>
            </ul>

            <span class="navbar-brand active" style="color: white"><%= board.name%></span>

            <ul class="nav navbar-nav navbar-right">


                <li class="navbar-right">
                    <a href="#"  role="button" aria-expanded="false" id="new-sticky-button">
                        <span class="glyphicon glyphicon-plus"></span>&nbsp;New Note</a>
                </li>
            </ul>
        </div>
    </nav>
    <div class="row">
    <div id="sticky-canvas" style="position:absolute; top: 100px; left: 0px; width:1310px;  height: 600px; background-color: black;" >
        <div id="dialog-modal" title="Basic modal dialog" style="display: none; padding:2px; margin:0px; display: table;"></div>
        <div id="sticky-section-glad" class="ui-widget-content sticky-canvas-quadrant" style="background-color: lightgreen;">
            <div class="center-me sticky-canvas-quadrant-title">Glad</div>
        </div>
        <div id="sticky-section-sad" class="ui-widget-content sticky-canvas-quadrant" style="background-color: lightyellow;">
            <div class="center-me sticky-canvas-quadrant-title">Sad</div>
        </div>
        <div id="sticky-section-mad" class="ui-widget-content sticky-canvas-quadrant" style="background-color: lightpink;">
            <div class="center-me sticky-canvas-quadrant-title">Mad</div>
        </div>
        <div id="sticky-section-try" class="ui-widget-content sticky-canvas-quadrant" style="background-color: lightblue;">
            <div class="center-me sticky-canvas-quadrant-title">Try</div>
        </div>
    </div>
        <div id="board-members-panel" style="position: absolute; top: 100px; left: 1310px; height: 600px; width: 300px; background-color: white; border: 1px solid grey; ">
                <span style="background-color: lightcyan; padding-top: 5px; display: block; text-align: center; float: none; font-weight: bold; font-size: 16px;">Members</span>
                <hr style="	border-top: 1px double lightgray; margin-top: 0px; margin-bottom: 0px;">
            <div id="board-members-inner-panel" style="height: 560px;">
            <ul class="list-group" id="board-members" style="height: 560px;">
                <!--
                <li class="list-group-item">Rachel Struthers</li>
                <li class="list-group-item">Fred Smith</li>
                -->
            </ul>
            </div>
        </div>
        </div>
    <div>

    </div>

    <% } %>



</body>
</html>